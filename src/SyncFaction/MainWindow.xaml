<!--SizeToContent="WidthAndHeight"-->
<Window Name="TheWindow" x:Class="SyncFaction.MainWindow" Style="{DynamicResource CustomWindowStyle}" xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:d="http://schemas.microsoft.com/expression/blend/2008" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:local="clr-namespace:SyncFaction" xmlns:mdxam="clr-namespace:MdXaml;assembly=MdXaml" xmlns:modXml="clr-namespace:SyncFaction.ModManager.XmlModels;assembly=SyncFaction.ModManager" xmlns:componentModel="clr-namespace:System.ComponentModel;assembly=WindowsBase" xmlns:converters="clr-namespace:SyncFaction.Converters" xmlns:dd="urn:gong-wpf-dragdrop" xmlns:system="clr-namespace:System;assembly=System.Runtime" xmlns:fa6="http://schemas.fontawesome.com/icons/svg"
        xmlns:viewModels="clr-namespace:SyncFaction.ViewModels"
        xmlns:models="clr-namespace:SyncFaction.Models"
        ContentRendered="MainWindow_OnContentRendered" mc:Ignorable="d" Title="SyncFaction" Height="450" MinHeight="450" Width="1000" MinWidth="1000" Icon="/icon.png" Closing="MainWindow_OnClosing" d:DataContext="{d:DesignInstance Type=viewModels:ViewModel, IsDesignTimeCreatable=True}" d:DesignHeight="700">

    <Window.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <!--
                This will be replaced with the correct skin to match the title bar theme by SkinManager
                Also, "light" is more DesignTime-friendly
                -->
                <ResourceDictionary Source="Skins/Skin.Light.xaml" />
            </ResourceDictionary.MergedDictionaries>
            <!--<ScaleTransform x:Key="windowScaleTransform" ScaleX="3" ScaleY="3" />-->
            <BooleanToVisibilityConverter x:Key="BoolToVis" />
            <converters:XmlNodeConverter x:Key="XmlNodeConverter" />
            <converters:EmptyStringCollapseConverter x:Key="EmptyStringCollapseConverter" />
            <converters:EmptyStringDisabledConverter x:Key="EmptyStringDisabledConverter" />
            <converters:CategoryHumanReadableConverter x:Key="CategoryConverter" />
            <converters:TabSelectedByTypeConverter x:Key="TabSelectedByTypeConverter" />
            <converters:TabSelectedByTypeVisibilityConverter x:Key="TabSelectedByTypeVisibilityConverter" />
            <converters:BoolShowHideConverter x:Key="BoolShowHideConverter" />
            <converters:BoolShowCollapseConverter x:Key="BoolShowCollapseConverter" />
            <converters:ModStatusConverter x:Key="ModStatusConverter" />
            <DataTemplate DataType="{x:Type modXml:ModInfo}">
                <StackPanel Orientation="Vertical">
                    <GroupBox Margin="10 5 10 5" Header="Mod Info">
                        <ScrollViewer HorizontalScrollBarVisibility="Disabled" VerticalScrollBarVisibility="Disabled">
                            <StackPanel Margin="10" Orientation="Vertical">
                                <TextBlock Text="{Binding Name}" FontWeight="Bold" TextWrapping="Wrap" />
                                <StackPanel Orientation="Horizontal">
                                    <TextBlock Text="by " />
                                    <TextBlock Text="{Binding Author}" TextWrapping="Wrap" />
                                </StackPanel>
                                <TextBlock Text="{Binding Description}" Padding="0 10" TextWrapping="Wrap" />
                                <StackPanel Orientation="Horizontal" Visibility="{Binding WebLink.XmlText, Converter={StaticResource EmptyStringCollapseConverter}, FallbackValue=Collapsed}">
                                    <TextBlock Text="link: " />
                                    <TextBlock TextWrapping="Wrap">
                                        <Hyperlink Command="NavigationCommands.GoToPage" CommandParameter="{Binding WebLink.XmlText}">
                                            <TextBlock ToolTip="{Binding WebLink.XmlText}" Text="{Binding WebLink.Name}" />
                                        </Hyperlink>
                                    </TextBlock>
                                </StackPanel>
                            </StackPanel>
                        </ScrollViewer>
                    </GroupBox>
                    <GroupBox Margin="10 5 10 5" Padding="5" Header="This mod has no settings">
                        <GroupBox.Style>
                            <Style TargetType="{x:Type GroupBox}" BasedOn="{StaticResource CustomizableGroupBox}">
                                <Setter Property="Visibility" Value="Collapsed" />
                                <Style.Triggers>
                                    <DataTrigger Value="{x:Null}" Binding="{Binding UserInput}">
                                        <Setter Property="Visibility" Value="Visible" />
                                    </DataTrigger>
                                    <DataTrigger Value="0" Binding="{Binding UserInput.Count}">
                                        <Setter Property="Visibility" Value="Visible" />
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </GroupBox.Style>
                    </GroupBox>
                    <ItemsControl Name="ModOptions" ItemsSource="{Binding UserInput}" />
                    <GroupBox Margin="10 5 10 5" Padding="5" Header="Actions">
                        <Button Click="ModResetInputs_Click">Reset to default values</Button>
                        <GroupBox.Style>
                            <Style TargetType="{x:Type GroupBox}" BasedOn="{StaticResource CustomizableGroupBox}">
                                <Setter Property="Visibility" Value="Visible" />
                                <Style.Triggers>
                                    <DataTrigger Value="{x:Null}" Binding="{Binding UserInput}">
                                        <Setter Property="Visibility" Value="Collapsed" />
                                    </DataTrigger>
                                    <DataTrigger Value="0" Binding="{Binding UserInput.Count}">
                                        <Setter Property="Visibility" Value="Collapsed" />
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </GroupBox.Style>
                    </GroupBox>
                </StackPanel>
            </DataTemplate>

            <DataTemplate DataType="{x:Type modXml:ListBox}">
                <GroupBox Margin="10 5 10 5" Padding="5" Header="{Binding DisplayName}">
                    <StackPanel Orientation="Vertical">
                        <ComboBox Margin="5" HorizontalContentAlignment="Stretch" SelectionChanged="Selector_OnSelectionChanged" SelectedIndex="{Binding SelectedIndex, FallbackValue=0}" ItemsSource="{Binding DisplayOptions}" />

                        <Expander Margin="5" IsExpanded="False">
                            <Expander.Header>
                                <TextBlock Text="Show actual value" />
                            </Expander.Header>
                            <TextBox BorderThickness="0" Margin="5" IsReadOnly="True" Height="80" VerticalScrollBarVisibility="Auto" HorizontalScrollBarVisibility="Auto" IsVisibleChanged="UIElement_OnIsVisibleChanged" Foreground="{DynamicResource ResourceKey={x:Static SystemColors.GrayTextBrushKey}}" Text="{Binding SelectedValue, Mode=OneWay, Converter={StaticResource XmlNodeConverter}}" />
                        </Expander>

                    </StackPanel>
                </GroupBox>
            </DataTemplate>
            <DataTemplate DataType="{x:Type modXml:Option}">
                <TextBlock Text="{Binding Name}" />
            </DataTemplate>
            <DataTemplate DataType="{x:Type modXml:CustomOption}">
                <Grid Margin="10 0 10 0" Width="Auto" HorizontalAlignment="Stretch">
                    <TextBox HorizontalAlignment="Stretch" AcceptsReturn="True" AcceptsTab="True" BorderThickness="0" TextChanged="TextBoxBase_OnTextChanged" TextWrapping="NoWrap" Text="{Binding Value, UpdateSourceTrigger=PropertyChanged}" MinWidth="100" HorizontalContentAlignment="Left" VerticalContentAlignment="Center" HorizontalScrollBarVisibility="Hidden" IsEnabled="True" />
                    <TextBlock IsHitTestVisible="False" VerticalAlignment="Center" HorizontalAlignment="Left" Foreground="DarkGray">
                        Custom value
                        <TextBlock.Style>
                            <Style TargetType="{x:Type TextBlock}">
                                <Setter Property="Visibility" Value="Collapsed" />
                                <Style.Triggers>
                                    <!--<DataTrigger Binding="{Binding Text, ElementName=Directory}" Value="">-->
                                    <DataTrigger Binding="{Binding Path=Children[0].Text, RelativeSource={RelativeSource AncestorType=Grid}}" Value="">
                                        <Setter Property="Visibility" Value="Visible" />
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </TextBlock.Style>
                    </TextBlock>
                </Grid>
            </DataTemplate>
            <ControlTemplate x:Key="TabControlTemplate" TargetType="TabControl">
                <DockPanel>
                    <!--<Border BorderThickness="0 2 0 0" BorderBrush="LightGray" DockPanel.Dock="Bottom" />-->
                    <UniformGrid IsItemsHost="True" Rows="1" DockPanel.Dock="Bottom" Margin="5 0 0 0" />
                    <!--<Border BorderThickness="0 2 0 0" BorderBrush="LightGray" DockPanel.Dock="Bottom" />-->
                    <ContentPresenter ContentSource="SelectedContent" />
                </DockPanel>

            </ControlTemplate>
            <CollectionViewSource x:Key="OnlineModViewSource" Source="{Binding OnlineMods}" IsLiveGroupingRequested="True">
                <CollectionViewSource.GroupDescriptions>
                    <PropertyGroupDescription PropertyName="Category" Converter="{StaticResource CategoryConverter}">
                        <PropertyGroupDescription.GroupNames>
                            <!-- manually controlled categories, displayed even when empty, and in given order. have to be strings because of converter -->
                            <!--
                        <factionFiles:Category>ModsGeneral</factionFiles:Category>
                        <factionFiles:Category>ModsScriptLoader</factionFiles:Category>
                        <factionFiles:Category>Local</factionFiles:Category>
                        -->
                            <system:String>Mods - General</system:String>
                            <system:String>Mods - Script Loader</system:String>
                            <system:String>Local Folders</system:String>


                            <!-- hidden from UI by default, appears below if dev mode enabled -->
                            <!--<factionFiles:Category>Dev</factionFiles:Category>-->
                        </PropertyGroupDescription.GroupNames>
                    </PropertyGroupDescription>
                </CollectionViewSource.GroupDescriptions>
                <CollectionViewSource.SortDescriptions>
                    <componentModel:SortDescription PropertyName="Name" />
                </CollectionViewSource.SortDescriptions>
            </CollectionViewSource>
            <CollectionViewSource x:Key="LocalModViewSource" Source="{Binding LocalMods}" IsLiveGroupingRequested="True">
                <CollectionViewSource.GroupDescriptions>
                    <PropertyGroupDescription PropertyName="Status">
                        <PropertyGroupDescription.GroupNames>
                            <!-- manually controlled categories, displayed even when empty, and in given order -->
                            <models:LocalModStatus>Enabled</models:LocalModStatus>
                            <models:LocalModStatus>Disabled</models:LocalModStatus>
                        </PropertyGroupDescription.GroupNames>
                    </PropertyGroupDescription>
                </CollectionViewSource.GroupDescriptions>
            </CollectionViewSource>
        </ResourceDictionary>

    </Window.Resources>
    <!--LayoutTransform="{StaticResource windowScaleTransform}"-->
    <Grid x:Name="MainGrid" ShowGridLines="{Binding GridLines}">
        <Grid.RowDefinitions>
            <!-- resizable markdown -->
            <RowDefinition Height="*" />
            <!-- main buttons -->
            <RowDefinition Height="Auto" />
            <!-- game directory input -->
            <RowDefinition Height="Auto" />
            <!-- links, loader and cancel button -->
            <RowDefinition Height="Auto" />
            <!-- hidden devMode controls -->
            <RowDefinition Height="Auto" />
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <!-- lego mason -->
            <ColumnDefinition Width="40*" />
            <!-- for labels -->
            <ColumnDefinition Width="25*" />
            <!-- for inputs -->
            <ColumnDefinition Width="100*" />
            <!-- tabs lists -->
            <ColumnDefinition Width="40*" />
        </Grid.ColumnDefinitions>
        <Grid Grid.Row="0" Grid.Column="0" Grid.ColumnSpan="3">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="Auto" />
                <!--NOTE: last column width = Auto to enable auto-collapse on hide-->
            </Grid.ColumnDefinitions>
            <mdxam:MarkdownScrollViewer xml:space="preserve" x:Name="Markdown" Margin="5,0,0,0" Grid.Column="0" VerticalScrollBarVisibility="Visible">
		        # Markdown example
		        # Markdown example
		        # Markdown example
		        # Markdown example
	        </mdxam:MarkdownScrollViewer>
            <ScrollViewer Grid.Column="1" Width="400" Visibility="{Binding DisplayModSettings, Converter={StaticResource BoolShowCollapseConverter}}" VerticalScrollBarVisibility="Visible" HorizontalScrollBarVisibility="Disabled">
                <ContentControl Name="ModSettings" Content="{Binding SelectedMod.Mod.ModInfo}" />
            </ScrollViewer>
        </Grid>
        <fa6:ImageAwesome Name="Spinner" Grid.Column="3" Grid.Row="3" Width="25" Margin="10,5,10,5" HorizontalAlignment="Right" Icon="Solid_Gear" Spin="True" SpinDuration="5" Visibility="{Binding Interactive, Converter={StaticResource BoolShowHideConverter}, ConverterParameter=false}" />
        <Grid Name="GeneralFailure" Visibility="{Binding GeneralFailure, Converter={StaticResource BoolShowHideConverter}, ConverterParameter=true}" Grid.Column="3" Grid.Row="3" Width="25" Height="25" Margin="10,5,10,5" HorizontalAlignment="Left">
            <!--FontAwesome icons are just symbols with transparent background. Need a hack to fill background under ! sign-->
            <fa6:ImageAwesome Icon="Solid_Play" Height="20" Rotation="270" Margin="0 2 0 0" PrimaryColor="Black" />
            <fa6:ImageAwesome Width="25" Icon="Solid_TriangleExclamation" PrimaryColor="{StaticResource SF.Highlight}" />
        </Grid>
        <Button Grid.Column="3" Grid.Row="3" x:Name="Cancel" Content="Cancel" MinWidth="100" Width="100" Command="{Binding CancelCommand}" />
        <Label Grid.Column="3" Grid.Row="2" Name="CurrentOperation" Content="{Binding CurrentOperation}" VerticalAlignment="Center" HorizontalAlignment="Center" Margin="10,0,10,0" Foreground="DarkGray" />
        <TabControl Grid.Row="0" Grid.Column="3" Grid.RowSpan="2" SelectedIndex="{Binding SelectedTab}" Name="Tabs" Template="{StaticResource TabControlTemplate}" IsEnabled="{Binding Interactive}">
            <TabItem Header="Browse Online" Name="DownloadItem" Foreground="{DynamicResource SF.Foreground}" IsSelected="{Binding SelectedTab, Converter={StaticResource TabSelectedByTypeConverter}}">
                <ListView Name="OnlineModList" BorderThickness="0" ItemsSource="{Binding Source={StaticResource OnlineModViewSource}, Mode=OneWay}" SelectionMode="Multiple">
                    <ListView.GroupStyle>
                        <GroupStyle ContainerStyle="{StaticResource ModListGroupCollapsibleHeader}" />
                    </ListView.GroupStyle>
                    <ListView.View>
                        <GridView ColumnHeaderContainerStyle="{DynamicResource {x:Type GridViewColumnHeader}}">
                            <GridViewColumn Header="" Width="20">
                                <GridViewColumn.CellTemplate>
                                    <DataTemplate DataType="{x:Type viewModels:OnlineModViewModel}">
                                        <StackPanel Orientation="Horizontal">
                                            <TextBlock Text="{Binding Status, Converter={StaticResource ModStatusConverter}, ConverterParameter=Download}" />
                                        </StackPanel>
                                    </DataTemplate>
                                </GridViewColumn.CellTemplate>
                            </GridViewColumn>
                            <GridViewColumn Header="Name" Width="Auto">
                                <GridViewColumn.CellTemplate>
                                    <DataTemplate DataType="{x:Type viewModels:OnlineModViewModel}">
                                        <TextBlock HorizontalAlignment="Stretch" Text="{Binding Name}" />
                                    </DataTemplate>
                                </GridViewColumn.CellTemplate>
                            </GridViewColumn>
                        </GridView>
                    </ListView.View>
                </ListView>
            </TabItem>
            <TabItem Header="Install" Name="ApplyItem" Foreground="{DynamicResource SF.Foreground}" IsSelected="{Binding SelectedTab, Converter={StaticResource TabSelectedByTypeConverter}, ConverterParameter=Apply}">
                <Grid>
                    <ListView Name="LocalModList" BorderThickness="0" ItemsSource="{Binding Source={StaticResource LocalModViewSource}, Mode=OneWay}" SelectionMode="Multiple" dd:DragDrop.IsDragSource="True" dd:DragDrop.IsDropTarget="True" dd:DragDrop.DropHandler="{Binding DropHandler}" dd:DragDrop.SelectDroppedItems="False" dd:DragDrop.UseDefaultEffectDataTemplate="True">
                        <ListView.GroupStyle>
                            <GroupStyle ContainerStyle="{StaticResource ModListGroupCollapsibleHeader}" />
                        </ListView.GroupStyle>
                        <ListView.View>
                            <GridView ColumnHeaderContainerStyle="{DynamicResource {x:Type GridViewColumnHeader}}">
                                <GridViewColumn Header="" Width="20">
                                    <GridViewColumn.CellTemplate>
                                        <DataTemplate DataType="{x:Type viewModels:LocalModViewModel}">
                                            <StackPanel Orientation="Horizontal">
                                                <TextBlock Text="{Binding Order}" />
                                            </StackPanel>
                                        </DataTemplate>
                                    </GridViewColumn.CellTemplate>
                                </GridViewColumn>
                                <GridViewColumn Header="Name" Width="Auto">
                                    <GridViewColumn.CellTemplate>
                                        <DataTemplate DataType="{x:Type viewModels:LocalModViewModel}">
                                            <TextBlock HorizontalAlignment="Stretch" Text="{Binding Name}" />
                                        </DataTemplate>
                                    </GridViewColumn.CellTemplate>
                                </GridViewColumn>
                            </GridView>
                        </ListView.View>
                    </ListView>
                </Grid>
            </TabItem>
        </TabControl>
        <Image Grid.Column="0" HorizontalAlignment="Center" Grid.RowSpan="3" Grid.Row="1" Stretch="Uniform" VerticalAlignment="Bottom" MaxHeight="135" Source="/lego.png" Margin="1px" MouseLeftButtonUp="LegoMasonClick" />
        <StackPanel Orientation="Horizontal" Grid.Row="1" HorizontalAlignment="Center" VerticalAlignment="Center" Grid.Column="1" Height="60" Grid.ColumnSpan="2">
            <Button x:Name="Run" Content="Run Game" Visibility="{Binding UpdateNotRequired,Converter={StaticResource BoolToVis}}" Command="{Binding RunCommand}" />
            <StackPanel Orientation="Vertical" HorizontalAlignment="Center" VerticalAlignment="Center">
                <StackPanel Orientation="Vertical" Visibility="{Binding UpdateNotRequired,Converter={StaticResource BoolToVis}}">
                    <Button x:Name="Download" MinWidth="200" MinHeight="40" Visibility="{Binding SelectedTab, Converter={StaticResource TabSelectedByTypeVisibilityConverter}, ConverterParameter=Download}" Command="{Binding DownloadCommand}">
                        <StackPanel Orientation="Horizontal">
                            <TextBlock>Download (</TextBlock>
                            <TextBlock Text="{Binding OnlineSelectedCount}" />
                            <TextBlock>)</TextBlock>
                        </StackPanel>
                    </Button>
                    <Button x:Name="Apply" MinWidth="200" MinHeight="40" Visibility="{Binding SelectedTab, Converter={StaticResource TabSelectedByTypeVisibilityConverter}, ConverterParameter=Apply}" Command="{Binding ApplyCommand}">
                        <StackPanel Orientation="Horizontal">
                            <TextBlock>Apply (</TextBlock>
                            <TextBlock Text="{Binding LocalSelectedCount}" />
                            <TextBlock>)</TextBlock>
                        </StackPanel>
                    </Button>
                </StackPanel>

                <Button x:Name="Update" Content="Update to latest Terraform Patch" MinWidth="200" MinHeight="40" Visibility="{Binding UpdateRequired,Converter={StaticResource BoolToVis}}" Command="{Binding UpdateCommand}" />
            </StackPanel>
            <Button x:Name="Refresh" Content="Refresh" Visibility="{Binding UpdateNotRequired,Converter={StaticResource BoolToVis}}" Command="{Binding RefreshCommand}" />
        </StackPanel>
        <Label VerticalAlignment="Center" Content="Game directory" Grid.Row="2" Grid.Column="1" />
        <Grid Grid.Row="2" Grid.Column="2">
            <TextBox BorderThickness="1 1 0 1" x:Name="Directory" TextWrapping="NoWrap" Text="{Binding Model.GameDirectory, UpdateSourceTrigger=PropertyChanged}" MinWidth="100" HorizontalContentAlignment="Left" VerticalContentAlignment="Center" HorizontalScrollBarVisibility="Hidden" IsEnabled="True" IsReadOnly="True" />
            <TextBlock IsHitTestVisible="False" Text="" VerticalAlignment="Center" HorizontalAlignment="Left" Margin="10,0,0,0" Foreground="DarkGray">
                To avoid manually locating game every time, put app .exe inside game dir
                <TextBlock.Style>
                    <Style TargetType="{x:Type TextBlock}">
                        <Setter Property="Visibility" Value="Collapsed" />
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding Text, ElementName=Directory}" Value="">
                                <Setter Property="Visibility" Value="Visible" />
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </TextBlock.Style>
            </TextBlock>
        </Grid>
        <StackPanel Orientation="Horizontal" HorizontalAlignment="Center" VerticalAlignment="Center" Grid.Column="1" Grid.Row="3" Grid.ColumnSpan="2">
            <TextBlock Margin="10,10,10,10">
                ▷&#160;Join&#160;
                <Hyperlink Command="NavigationCommands.GoToPage" CommandParameter="https://discord.gg/factionfiles" ToolTip="https://discord.gg/factionfiles">FactionFiles Discord</Hyperlink>
            </TextBlock>
            <TextBlock Margin="10,10,10,10">
                ▷&#160;
                <Hyperlink Command="NavigationCommands.GoToPage" CommandParameter="https://github.com/rfg-modding/SyncFaction" ToolTip="https://github.com/rfg-modding/SyncFaction">GitHub page</Hyperlink>
                &#160;for feedback
            </TextBlock>
            <WrapPanel Margin="10,10,10,10">
                <Grid>
                    <WrapPanel>
                        <TextBlock MouseLeftButtonUp="DevModeTextClick">▷ Dev mode&#160;</TextBlock>
                        <CheckBox x:Name="FakeCheckBoxForPadding" Visibility="Hidden" IsEnabled="False" HorizontalAlignment="Right" />
                    </WrapPanel>
                    <!-- TODO something causes shift on other elements when dev panel is shown -->
                    <CheckBox x:Name="DevMode" VerticalAlignment="Bottom" IsChecked="{Binding Model.DevMode}" HorizontalAlignment="Right" />
                </Grid>
            </WrapPanel>
        </StackPanel>
        <GridSplitter Grid.Column="3" Grid.Row="0" Grid.RowSpan="3" HorizontalAlignment="Left" VerticalAlignment="Stretch" ShowsPreview="true" Width="3" />
        <Grid Name="DevModeGrid" Grid.Row="4" Grid.Column="0" Grid.ColumnSpan="4" ShowGridLines="{Binding GridLines}" Visibility="{Binding Model.DevMode,Converter={StaticResource BoolToVis}}" IsVisibleChanged="DevModeGrid_OnIsVisibleChanged" SizeChanged="DevModeGrid_OnSizeChanged">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="80*" />
                <ColumnDefinition Width="45*" />
                <ColumnDefinition Width="80*" />
            </Grid.ColumnDefinitions>
            <GroupBox Grid.Column="0" HorizontalAlignment="Left" Margin="5" Header="Dev options (careful!)">
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition></ColumnDefinition>
                        <ColumnDefinition></ColumnDefinition>
                    </Grid.ColumnDefinitions>
                    <StackPanel Grid.Column="0" Orientation="Vertical" HorizontalAlignment="Left">
                        <Button x:Name="Init" Content="Repeat App Initialization" Command="{Binding InitCommand}" />
                        <Button x:Name="DarkMode" Content="Switch Theme (not really)" Command="{Binding SwitchDarkModeCommand}" />
                        <Button x:Name="GetLogs" Content="Get Logs and Clear Output" Command="{Binding GetLogsCommand}" />
                        <Label Height="40" VerticalContentAlignment="Center" HorizontalAlignment="Center">Open directories:</Label>
                        <StackPanel Orientation="Horizontal" HorizontalAlignment="Center">
                            <Button BorderThickness="1 1 0 1" Content="&lt;root&gt;" MinWidth="10" Margin="0,10,0,10" Padding="2,0,2,0" Command="{Binding OpenDirCommand}" CommandParameter="" />
                            <Button BorderThickness="1 1 0 1" Content="/data" MinWidth="10" Margin="0,10,0,10" Padding="2,0,2,0" Command="{Binding OpenDirCommand}" CommandParameter="data" />
                            <Button BorderThickness="1 1 1 1" Content="/.syncfaction" MinWidth="10" Margin="0,10,0,10" Padding="2,0,2,0" Command="{Binding OpenDirCommand}" CommandParameter="data/.syncfaction" />
                        </StackPanel>
                    </StackPanel>
                    <StackPanel Grid.Column="1" Orientation="Vertical" HorizontalAlignment="Left">
                        <CheckBox Margin="10" Height="20" VerticalContentAlignment="Center" IsChecked="{Binding UpdateRequired}" Content="UI: Update required" />
                        <CheckBox Margin="10" Height="20" VerticalContentAlignment="Center" IsChecked="{Binding Interactive}" Content="UI: Interactive/Busy" />
                        <CheckBox Margin="10" Height="20" VerticalContentAlignment="Center" IsChecked="{Binding Model.StartupUpdates}" Content="Startup update check" />
                        <CheckBox Margin="10" Height="20" VerticalContentAlignment="Center" IsChecked="{Binding Model.DevHiddenMods}" Content="Dev and hidden mods" />
                        <StackPanel Orientation="Horizontal" HorizontalAlignment="Center">
                            <Button Content="Steam◁" MinWidth="10" Margin="1,10,0,10" Padding="2,0,2,0" Command="{Binding CopySaveToSteamCommand}" CommandParameter="data/.syncfaction" />
                            <Label Height="40" Padding="0" VerticalContentAlignment="Center" HorizontalAlignment="Center">Copy Save</Label>
                            <Button Content="▷GOG" MinWidth="10" Margin="0,10,1,10" Padding="2,0,2,0" Command="{Binding CopySaveToGogCommand}" CommandParameter="" />
                        </StackPanel>
                    </StackPanel>
                </Grid>

            </GroupBox>
            <GroupBox Grid.Column="1" HorizontalAlignment="Left" Margin="5" Header="Settings">
                <StackPanel Orientation="Vertical" HorizontalAlignment="Left">
                    <CheckBox Margin="10" Height="20" VerticalContentAlignment="Center" IsChecked="{Binding Model.Multithreading}">
                        <StackPanel Orientation="Horizontal">
                            <TextBlock>Multithreading (</TextBlock>
                            <TextBlock Text="{Binding Model.ThreadCount}" />
                            <TextBlock>)</TextBlock>
                        </StackPanel>
                    </CheckBox>
                    <CheckBox Margin="10" Height="20" VerticalContentAlignment="Center" IsChecked="{Binding Model.UseCdn}" Content="Use CDN: try if slow DL" />
                    <Button x:Name="RestoreMods" Content="Restore Last Mods" Command="{Binding RestoreModsCommand}" />
                    <Button x:Name="RestorePatch" Content="Restore to Patch" Command="{Binding RestorePatchCommand}" />
                    <Button x:Name="RestoreVanilla" Content="Restore to Vanilla" Command="{Binding RestoreVanillaCommand}" />

                </StackPanel>
            </GroupBox>
            <GroupBox Grid.Column="2" Margin="5" Header="Diagnostics">
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto" />
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="10*" />
                        <ColumnDefinition Width="10*" />
                    </Grid.ColumnDefinitions>
                    <StackPanel Grid.Column="0" Orientation="Vertical" HorizontalAlignment="Left">
                        <Button x:Name="GenerateReport" Content="Generate Report" Command="{Binding GenerateReportCommand}" />
                        <Button x:Name="CopyReport" IsEnabled="{Binding DiagView, Converter={StaticResource EmptyStringDisabledConverter}}" Content="Copy to Clipboard" Click="CopyReport_Click" />
                    </StackPanel>
                    <TextBox Grid.Column="1" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" ScrollViewer.CanContentScroll="True" IsReadOnly="True" HorizontalScrollBarVisibility="Visible" VerticalScrollBarVisibility="Visible" MinHeight="100" MaxHeight="300" Height="190" Name="DiagText" Text="{Binding DiagView, Mode=OneWay}" />
                </Grid>

            </GroupBox>


        </Grid>
    </Grid>
</Window>
